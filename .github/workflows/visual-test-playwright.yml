name: Visual Regression Tests

on:
  schedule:
    - cron: "30 2 * * *" # Runs daily at 8:00 AM UTC
  workflow_dispatch: # Allows manual trigger

jobs:
  run-visual-tests:
    name: Run Visual Tests
    runs-on: ubuntu-latest

    env:
      BASE_URL: ${{ secrets.BASE_URL }}
      HETZNER_S3_BUCKET: ${{ secrets.HETZNER_S3_BUCKET }}
      HETZNER_S3_ACCESS_KEY_ID: ${{ secrets.HETZNER_S3_ACCESS_KEY_ID }}
      HETZNER_S3_SECRET_ACCESS_KEY: ${{ secrets.HETZNER_S3_SECRET_ACCESS_KEY }}
      HETZNER_S3_ENDPOINT_URL: ${{ secrets.HETZNER_S3_ENDPOINT_URL }}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Cache npm modules
        uses: actions/cache@v4
        with:
          path: /github/home/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
    
      - name: Install MinIO Client (mc)
        run: |
          curl -fsSL https://dl.min.io/client/mc/release/linux-amd64/mc \
          -o mc && chmod +x mc && sudo mv mc /usr/local/bin/

      - name: Configure mc alias for Hetzner S3
        run: |
          mc alias set hetzner \
            ${{ env.HETZNER_S3_ENDPOINT_URL }} \
            ${{ env.HETZNER_S3_ACCESS_KEY_ID }} \
            ${{ env.HETZNER_S3_SECRET_ACCESS_KEY }}

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps

      - name: Sync snapshots FROM Hetzner S3 to local
        run: |
          aws --endpoint-url=${{ env.HETZNER_S3_ENDPOINT_URL }} s3 sync \
          s3://${{ env.HETZNER_S3_BUCKET }}/visual-snapshots/ \
          tests/visualAutomation/specs/visualAutomation.spec.js-snapshots/ \
          --delete

      - name: Run Visual Tests
        run: npm run visual:test

      - name: Update Snapshots
        run: npm run visual:test:update

      - name: Upload updated snapshots to Hetzner S3
        if: success()
        run: |
            aws --endpoint-url=${{ env.HETZNER_S3_ENDPOINT_URL }} s3 sync \
            tests/visualAutomation/specs/visualAutomation.spec.js-snapshots/ \
            s3://${{ env.HETZNER_S3_BUCKET }}/visual-snapshots/ \
            --delete

      - name: Upload visual diff artifacts (optional)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: visual-diffs
          path: |
            test-results/
